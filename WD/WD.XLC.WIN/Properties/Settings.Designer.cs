//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WD.XLC.WIN.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=E:\\Deploy\\DALProject\\DEV\\WD\\WD.XLC.W" +
            "IN\\App_Data\\AL.mdb")]
        public string ConnString {
            get {
                return ((string)(this["ConnString"]));
            }
            set {
                this["ConnString"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("7")]
        public int DbProvider {
            get {
                return ((int)(this["DbProvider"]));
            }
            set {
                this["DbProvider"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("E:\\Deploy\\DALProject\\DEV\\WD\\WD.XLC.WIN\\App_Data\\AL.mdb")]
        public string DatabaseName {
            get {
                return ((string)(this["DatabaseName"]));
            }
            set {
                this["DatabaseName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string InitialCatalog {
            get {
                return ((string)(this["InitialCatalog"]));
            }
            set {
                this["InitialCatalog"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Password {
            get {
                return ((string)(this["Password"]));
            }
            set {
                this["Password"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ServerName {
            get {
                return ((string)(this["ServerName"]));
            }
            set {
                this["ServerName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ServerPort {
            get {
                return ((string)(this["ServerPort"]));
            }
            set {
                this["ServerPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string UserID {
            get {
                return ((string)(this["UserID"]));
            }
            set {
                this["UserID"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string CurrentSchema {
            get {
                return ((string)(this["CurrentSchema"]));
            }
            set {
                this["CurrentSchema"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string CurrentProtocol {
            get {
                return ((string)(this["CurrentProtocol"]));
            }
            set {
                this["CurrentProtocol"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int IntegratedSecurity {
            get {
                return ((int)(this["IntegratedSecurity"]));
            }
            set {
                this["IntegratedSecurity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"echo off
SETLOCAL EnableDelayedExpansion
set movedFiles=0
set maxFiles=#maxFiles#
set baseDir=#baseDir#
set destDir=#destDir#
set fileExtension=#fileExtension#
for /R %baseDir% %%G in (%fileExtension%) do (
    echo moving... ""%%G""
    move /Y ""%%G"" %destDir%
    set /a movedFiles+=1
    if !movedFiles! EQU %maxFiles% exit
  )
  :endOfCopy
  echo Done, %movedFiles% files Where copied successfully
  
ENDLOCAL")]
        public string CopyFiles {
            get {
                return ((string)(this["CopyFiles"]));
            }
            set {
                this["CopyFiles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ProviderString {
            get {
                return ((string)(this["ProviderString"]));
            }
            set {
                this["ProviderString"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("@ECHO OFF\r\nSETLOCAL EnableDelayedExpansion\r\nSET baseDir=#baseDir#\r\nSET logDir=#lo" +
            "gDir#\r\nSET days=#days#\r\nFORFILES /p \"%baseDir%\" /S /M *.* /D -%days% /C \"cmd /c " +
            "del /q  @path && echo @path>>%logDir% || echo @path>>%logDir%\"\r\nexit\r\n\r\n\r\n")]
        public string DeleteFiles {
            get {
                return ((string)(this["DeleteFiles"]));
            }
            set {
                this["DeleteFiles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("@ECHO OFF\r\nSETLOCAL EnableDelayedExpansion\r\nSET baseDir=#baseDir#\r\nSET logDir=#lo" +
            "gDir#\r\nSET days=#days#\r\nFORFILES /p \"%baseDir%\" /S /M *.* /D -%days% /C \"cmd /c " +
            "del /q  @path\"\r\nexit\r\n\r\n")]
        public string DeleteFilesWithoutLog {
            get {
                return ((string)(this["DeleteFilesWithoutLog"]));
            }
            set {
                this["DeleteFilesWithoutLog"] = value;
            }
        }
    }
}
